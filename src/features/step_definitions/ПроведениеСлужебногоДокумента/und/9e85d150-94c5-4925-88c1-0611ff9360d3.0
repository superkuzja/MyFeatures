{3,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},0,"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{11,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-ADD
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-ADD.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	// описание шагов
	// пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, Снипет, ИмяПроцедуры, ПредставлениеТеста, ОписаниеШага, ТипШагаДляОписания, ТипШагаВДереве);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯСоздаюНовыйСлужебныйДокумент()"",""ЯСоздаюНовыйСлужебныйДокумент"",""Допустим я создаю новый служебный документ"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗаполняюДокументСлужебныйДокументТестовымиЗначениями()"",""ЯЗаполняюДокументСлужебныйДокументТестовымиЗначениями"",""И я заполняю документ служебный документ тестовыми значениями"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯПровожуДокумент()"",""ЯПровожуДокумент"",""Когда я провожу документ"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ДокументПроведен()"",""ДокументПроведен"",""Тогда документ проведен"","""","""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим я создаю новый служебный документ
//@ЯСоздаюНовыйСлужебныйДокумент()
Процедура ЯСоздаюНовыйСлужебныйДокумент() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	СлужебныйДокумент = ПолучитьНовыйСлужебныйДокумент();
	Контекст.Вставить(""СлужебныйДокумент"", СлужебныйДокумент);
КонецПроцедуры

&НаКлиенте
//И я заполняю документ служебный документ тестовыми значениями
//@ЯЗаполняюДокументСлужебныйДокументТестовымиЗначениями()
Процедура ЯЗаполняюДокументСлужебныйДокументТестовымиЗначениями() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	СлужебныйДокумент = Контекст.СлужебныйДокумент;
	ЗаполнитьРеквизитыСлужебногоДокумента(СлужебныйДокумент);
КонецПроцедуры

&НаКлиенте
//Когда я провожу документ
//@ЯПровожуДокумент()
Процедура ЯПровожуДокумент() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	СлужебныйДокумент = Контекст.СлужебныйДокумент;
	ПровестиДокумент(СлужебныйДокумент);
КонецПроцедуры

&НаКлиенте
//Тогда документ проведен
//@ДокументПроведен()
Процедура ДокументПроведен() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);

	СлужебныйДокумент = Контекст.СлужебныйДокумент;
	Если НЕ ДокументПроведенПроверка(СлужебныйДокумент) Тогда
		ВызватьИсключение ""Документ не проведен!"";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНовыйСлужебныйДокумент()
	
	Док = Документы.СлужебныйДокумент.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат Док.Ссылка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыСлужебногоДокумента(СлужебныйДокумент)
	
	ДокОбъект = СлужебныйДокумент.ПолучитьОбъект();
	
	#Если Клиент И Не Клиент Тогда
	ДокОбъект = Документы.СлужебныйДокумент.СоздатьДокумент();
	#КонецЕсли
	
	ДокОбъект.Реквизит1 = ""ЗначениеРеквизита1"";
	ДокОбъект.Реквизит2 = ""ЗначениеРеквизита2"";
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

&НаСервере
Процедура ПровестиДокумент(СлужебныйДокумент)
	
	ДокОбъект = СлужебныйДокумент.ПолучитьОбъект();
	
	#Если Клиент И Не Клиент Тогда
	ДокОбъект = Документы.СлужебныйДокумент.СоздатьДокумент();
	#КонецЕсли

	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Функция ДокументПроведенПроверка(СлужебныйДокумент)
	
	#Если Клиент И Не Клиент Тогда
	СлужебныйДокумент = Документы.СлужебныйДокумент.ПустаяСсылка();
	#КонецЕсли

	Возврат СлужебныйДокумент.Проведен;
	
КонецФункции
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",503de865-4645-4496-b5dd-2e4a76236095}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}